/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthOnboardingRouteImport } from './routes/_auth/onboarding'
import { Route as AuthAppRouteImport } from './routes/_auth/_app'
import { Route as AuthAppTopicsRouteImport } from './routes/_auth/_app/topics'
import { Route as AuthAppSettingsRouteImport } from './routes/_auth/_app/settings'
import { Route as AuthAppBriefsRouteImport } from './routes/_auth/_app/briefs'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnboardingRoute = AuthOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAppRoute = AuthAppRouteImport.update({
  id: '/_app',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAppTopicsRoute = AuthAppTopicsRouteImport.update({
  id: '/topics',
  path: '/topics',
  getParentRoute: () => AuthAppRoute,
} as any)
const AuthAppSettingsRoute = AuthAppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthAppRoute,
} as any)
const AuthAppBriefsRoute = AuthAppBriefsRouteImport.update({
  id: '/briefs',
  path: '/briefs',
  getParentRoute: () => AuthAppRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof AuthOnboardingRoute
  '/briefs': typeof AuthAppBriefsRoute
  '/settings': typeof AuthAppSettingsRoute
  '/topics': typeof AuthAppTopicsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/onboarding': typeof AuthOnboardingRoute
  '/briefs': typeof AuthAppBriefsRoute
  '/settings': typeof AuthAppSettingsRoute
  '/topics': typeof AuthAppTopicsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/_app': typeof AuthAppRouteWithChildren
  '/_auth/onboarding': typeof AuthOnboardingRoute
  '/_auth/_app/briefs': typeof AuthAppBriefsRoute
  '/_auth/_app/settings': typeof AuthAppSettingsRoute
  '/_auth/_app/topics': typeof AuthAppTopicsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/onboarding'
    | '/briefs'
    | '/settings'
    | '/topics'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/onboarding' | '/briefs' | '/settings' | '/topics'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/_app'
    | '/_auth/onboarding'
    | '/_auth/_app/briefs'
    | '/_auth/_app/settings'
    | '/_auth/_app/topics'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/onboarding': {
      id: '/_auth/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthOnboardingRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_app': {
      id: '/_auth/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthAppRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_app/topics': {
      id: '/_auth/_app/topics'
      path: '/topics'
      fullPath: '/topics'
      preLoaderRoute: typeof AuthAppTopicsRouteImport
      parentRoute: typeof AuthAppRoute
    }
    '/_auth/_app/settings': {
      id: '/_auth/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthAppSettingsRouteImport
      parentRoute: typeof AuthAppRoute
    }
    '/_auth/_app/briefs': {
      id: '/_auth/_app/briefs'
      path: '/briefs'
      fullPath: '/briefs'
      preLoaderRoute: typeof AuthAppBriefsRouteImport
      parentRoute: typeof AuthAppRoute
    }
  }
}

interface AuthAppRouteChildren {
  AuthAppBriefsRoute: typeof AuthAppBriefsRoute
  AuthAppSettingsRoute: typeof AuthAppSettingsRoute
  AuthAppTopicsRoute: typeof AuthAppTopicsRoute
}

const AuthAppRouteChildren: AuthAppRouteChildren = {
  AuthAppBriefsRoute: AuthAppBriefsRoute,
  AuthAppSettingsRoute: AuthAppSettingsRoute,
  AuthAppTopicsRoute: AuthAppTopicsRoute,
}

const AuthAppRouteWithChildren =
  AuthAppRoute._addFileChildren(AuthAppRouteChildren)

interface AuthRouteChildren {
  AuthAppRoute: typeof AuthAppRouteWithChildren
  AuthOnboardingRoute: typeof AuthOnboardingRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAppRoute: AuthAppRouteWithChildren,
  AuthOnboardingRoute: AuthOnboardingRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
